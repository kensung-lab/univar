import { ALT_COLUMN, CHROM_COLUMN, END_COLUMN, ENSEMBL_GENE_COLUMN, ENSEMBL_TRANSCRIPT_COLUMN, ENTREZ_GENE_COLUMN, GENE_COLUMN, GENOTYPES_COLUMN, HIGHEST_AF_COLUMN, LOCATION_COLUMN, MANE_PLUS_CLINICAL_COLUMN, MANE_SELECT_COLUMN, PATHOGENIC_COLUMN, PLI_COLUMN, P_LOF_COLUMN, REF_COLUMN, CALLER_COLUMN, START_COLUMN, TYPE_COLUMN, VARINAT_TYPE_COLUMN, SV_LEN_COLUMN,  COPY_NUM_GENOTYPE,
  COPY_NUM_GENOTYP_QUAL, EXOMISER_GENE_SYMBOL, EXOMISER_MOI, EXOMISER_REMM, EXOMISER_GENE_COMBINED_SCORE, EXOMISER_GENE_PHENO_SCORE, EXOMISER_GENE_VARIANT_SCORE, EXOMISER_ACMG_DISEASE_NAME, EXOMISER_ACMG_CLASSIFICATION, EXOMISER_ACMG_EVIDENCE, EXOMISER_ACMG_DISEASE_ID } from "./eachColumns"

const COLUMNS = [
  {...CHROM_COLUMN},
  {...START_COLUMN},
  {...END_COLUMN},
  {...LOCATION_COLUMN},
  {...REF_COLUMN},
  {...ALT_COLUMN},
  {...GENOTYPES_COLUMN},
  {...GENE_COLUMN},
  Object.assign({...SV_LEN_COLUMN}, {isShow: true}),
  Object.assign({...CALLER_COLUMN}, {isShow: true}),
  /* Genomic and genetic data */
  {...ENSEMBL_TRANSCRIPT_COLUMN},
  {...ENSEMBL_GENE_COLUMN},
  {...ENTREZ_GENE_COLUMN},
  {...PLI_COLUMN},
  {...MANE_SELECT_COLUMN},
  {...MANE_PLUS_CLINICAL_COLUMN},
  {...TYPE_COLUMN},
  {...HIGHEST_AF_COLUMN},
  {...VARINAT_TYPE_COLUMN},
  /* Unique for structural variant */
  {...P_LOF_COLUMN},
  Object.assign({...PATHOGENIC_COLUMN}, {isShow: true}),
  {...COPY_NUM_GENOTYPE},
  {...COPY_NUM_GENOTYP_QUAL},
  {...EXOMISER_GENE_SYMBOL},
  {...EXOMISER_MOI},
  {...EXOMISER_REMM},
  {...EXOMISER_GENE_COMBINED_SCORE},
  {...EXOMISER_GENE_PHENO_SCORE},
  {...EXOMISER_GENE_VARIANT_SCORE},
  {...EXOMISER_ACMG_DISEASE_NAME},
  {...EXOMISER_ACMG_CLASSIFICATION},
  {...EXOMISER_ACMG_EVIDENCE},
  {...EXOMISER_ACMG_DISEASE_ID},
]

export default [...COLUMNS]